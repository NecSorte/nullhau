name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Run tests
      run: pytest

  security:
    runs-on: ubuntu-latest
    needs: build

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'

    - name: Install Bandit
      run: pip install bandit

    - name: Run Bandit
      run: bandit -r .

    - name: Install TruffleHog
      run: pip install truffleHog

    - name: Run TruffleHog
      run: trufflehog filesystem --directory=.

    - name: Download Snyk CLI
      run: curl -Lo snyk https://static.snyk.io/cli/latest/snyk-linux && chmod +x snyk

    - name: Authenticate Snyk
      run: ./snyk auth ${{ secrets.SNYK_TOKEN }}

    - name: Test for vulnerabilities
      run: ./snyk test
      continue-on-error: true

  deploy:
    runs-on: ubuntu-latest
    needs: [build, security]

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Log in to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and push Docker image
      run: |
        docker build -t ${{ secrets.DOCKER_USERNAME }}/nullhau:${{ github.sha }} .
        docker push ${{ secrets.DOCKER_USERNAME }}/nullhau:${{ github.sha }}

    - name: Set up kubectl
      uses: Azure/setup-kubectl@v1
      with:
        version: 'latest'

    - name: Deploy to k3s
      env:
        KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DATA }}
      run: |
        echo "$KUBE_CONFIG_DATA" | base64 --decode > kubeconfig
        kubectl --kubeconfig=kubeconfig set image deployment/hau-deployment hau-container=${{ secrets.DOCKER_USERNAME }}/nullhau:${{ github.sha }}
        kubectl --kubeconfig=kubeconfig rollout status deployment/hau-deployment
